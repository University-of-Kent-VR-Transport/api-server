name: CI/CD

on: [push]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.4

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: '^1.15.0'
        
      - name: Run unit tests and generate coverage report
        run: go test ./... -cover -coverprofile=coverage.out

      - name: Upload coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage.out

      - name: Save coverage report to CodeCov
        uses: codecov/codecov-action@v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          file: coverage.out
          fail_ci_if_error: true

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY" > ~/.ssh/production.key
        chmod 600 ~/.ssh/production.key
        cat >>~/.ssh/config <<END
        Host production
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/production.key
          StrictHostKeyChecking no
        END
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}

    - name: Pull new changes
      run: ssh production 'cd app && git pull origin master'

    - name: Pull images
      run: ssh production 'cd app && docker-compose pull'

    - name: Restart containers with the new images and removes unused containers
      run: ssh production 'cd app && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --no-deps --remove-orphans'

    - name: Remove any unused images
      run: ssh production 'cd app && docker image prune'